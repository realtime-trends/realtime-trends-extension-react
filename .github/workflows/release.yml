# This workflow will do a clean install of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Create release

on:
  push:
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - uses: actions/checkout@v2

      - name: Update version variable
        run: echo "version=$(echo "${{ github.ref }}" | grep -oP '([0-9\.]+)')" >> $GITHUB_ENV

      - name: Update version on manifest
        run: sed -i "s/0.0.0/${{ env.version }}/g" public/manifest.json

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - run: npm install

      - run: CI="" NODE_OPTIONS=--openssl-legacy-provider npm run build --if-present

      - name: Build project # This would actually build your project, using zip for an example artifact
        run: |
          cd build
          zip -r ../realtime-trends.zip *

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./realtime-trends.zip
          asset_name: realtime-trends.zip
          asset_content_type: application/zip

      - name: Archive zip file
        uses: actions/upload-artifact@v2
        with:
          name: realtime-trends
          path: ./build
